@{
    ViewData["Title"] = "Admission";
    Layout = "_LayoutNurse";
}
@model DEMO.ViewModels.BookedPatientInfo
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admission (Wards)</title>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

   <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script> 
    
    <script>
        $(document).ready(function () {
            $.ajax({
                url: "/lookup/GetAllProvinces",
                type: "Get",
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].provinceName, data[i].provinceID);
                        $('#Province').append(opt).val(data.provinceID).html(data.provinceName);
                    }

                }

            });

        });

        $(document).ready(function () {
            $.ajax({
                url: "/lookup/GetAllWards",
                type: "Get",
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].wardName, data[i].wardId);
                        $('#Ward').append(opt).val(data.wardId).html(data.wardName);
                    }

                }

            });

        });
        $(document).ready(function () {
            $.ajax({
                url: "/lookup/GetAllAllergies",
                type: "Get",
                success: function (data) {
                    data.sort(function (a, b) {
                        return a.activeIngredientName.localeCompare(b.activeIngredientName);
                    });
                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].activeIngredientName, data[i].activeingredientID);
                        $('#Allergies').append(opt).val(data.activeingredientID).html(data.activeIngredientName);
                    }

                }

            });
        });

        $(document).ready(function () {
            $.ajax({
                url: "/lookup/GetAllMedications",
                type: "Get",
                success: function (data) {
                    data.sort(function (a, b) {
                        return a.medicationName.localeCompare(b.medicationName);
                    });
                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].medicationName, data[i].medicationID);
                        $('#Medication').append(opt).val(data.medicationID).html(data.medicationName);
                    }

                }

            });
        });

        $(document).ready(function () {
            $.ajax({
                url: "/lookup/GetAllConditions",
                type: "Get",
                success: function (data) {
                    data.sort(function (a, b) {
                        return a.conditionName.localeCompare(b.conditionName);
                    });


                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].conditionName, data[i].conditionID);
                        $('#Conditions').append(opt).val(data.conditionID).html(data.conditionName);
                    }

                }

            });

        });

        function GetBedsByWardId() {
            $("#Bed").empty(); //Default value
            
            var wardId = document.getElementById('Ward').value;
            
            $.ajax({
                url: "/lookup/GetBedsByWardId",
                type: "Get",
                data: { WardID: wardId },
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].number, data[i].bedId);
                        $('#Bed').append(opt).val(data.bedId).html(data.number);

                    }

                }
            });

        };

        function GetCitiesByProvinceId() {
            $("#City").empty(); //Default value

            var provinceId = document.getElementById('Province').value;

            $.ajax({
                url: "/lookup/GetCitiesByProvinceId",
                type: "Get",
                data: { ProvinceID: provinceId },
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].cityName, data[i].cityID);
                        $('#City').append(opt).val(data.cityID).html(data.cityName);

                    }

                }
            });

        };

        function GetSuburbsByCityId() {
            $("#Suburb").empty(); //Default value

            var cityId = document.getElementById('City').value;
            $.ajax({
                url: "/lookup/GetSuburbsByCityId",
                type: "Get",
                data: { CityID : cityId},
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        var opt = new Option(data[i].name, data[i].suburbID);
                        $('#Suburb').append(opt).val(data.suburbID).html(data.name);
                    }

                }

            });

        };

        function SetPostalCodeBySuburbId() {
            $("#txtPostalCode").empty(); //Default value

            var suburbId = document.getElementById('Suburb').value;
            $.ajax({
                url: "/lookup/GetPostalCodeBySuburbId",
                type: "Get",
                data: { SuburbId: suburbId },
                success: function (data) {
                    $('#txtPostalCode').text(data);
                }

            });

        };
        

    </script>



    <style>
        .active-tab {
            background-color: teal;
            color: white;
        }

        .container {
            padding-top: 50px;
        }

        .form-card {
            max-width: 900px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: #f9f9f9;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 30px;
        }

        .row-two-columns {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }

            .row-two-columns .vital-group {
                flex: 1 1 48%;
            }

        .vital-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        .vital-group {
            text-align: left;
        }

            .vital-group input,
            .vital-group select {
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                font-size: 14px;
                color: #333;
                width: 100%;
                max-width: 400px;
                box-sizing: border-box;
                height: 40px;
                margin: 0;
            }

        .header-labels {
            text-align: left;
            margin-bottom: 20px;
            padding-left:50px;
        }

            .header-labels label {
                display: block;
                margin-bottom: 10px;
                font-size: 18px;
                color: #333;
            }

        .form-card hr {
            margin: 20px 0;
        }

        .list-view-box {
            border: 1px solid #ccc;
            border-radius: 5px;
            max-height: 200px;
            overflow-y: auto;
            padding: 10px;
        }

            .list-view-box p {
                margin: 5px 0;
                padding: 5px;
                background-color: #f1f1f1;
                border-radius: 3px;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

                .list-view-box p span {
                    flex-grow: 1;
                }

                .list-view-box p button {
                    border: none;
                    background-color: red;
                    color: white;
                    border-radius: 3px;
                    padding: 5px;
                    cursor: pointer;
                }

        .address-group {
            margin-bottom: 10px;
        }

            .address-group label {
                display: block;
                margin-bottom: 5px;
            }

            .address-group select {
                width: 100%;
                padding: 8px;
            }

    </style>

   
</head>
<body>
    <div class="container-fluid" id="grad1">
        <div class="row justify-content-center mt-0" style="width: contain;">
            <div class="text-center p-0 mt-3 mb-2">
                <div class="card px-0 pt-4 pb-0 mt-3 mb-3">
                    <h2><strong>Admission</strong></h2>
                    <hr></hr>
                    <div class="header-labels">
                        
                        <label>Name: @Model.Name</label>
                        <label>Surname: @Model.Surname</label>
                        <label>Date: @Model.Date</label>
                        
                    </div>
                    <hr></hr>
                    <div class="row">
                        <div class="col-md-12 mx-0">
                            <form id="msform" asp-controller="Nurse" method="post">
                                <!-- progressbar -->
                                <ul id="progressbar">
                                    <input type="button" name="Contact Details" class="next action-button" onclick="showContactDetails()" value="Contact Details" />
                                    <input type="button" name="Allergies and Conditions" class="next action-button" onclick="showAllergyConditions()" value="Allergies and Conditions" />
                                    <input type="button" name="Current Medications" class="next action-button" onclick="showMedications()" value="Current Medications" />
                                    <input type="button" name="Vitals" class="next action-button" onclick="showVitals()" value="Vitals" />
                                </ul>
                                <!-- fieldsets -->
                                <fieldset id="f-1">
                                  <div class="form-card">
                                        <h2 class="fs-title">Contact Details And Ward</h2>
                                        <div class="form-group">
                                            <hr></hr>
                                            <h4>Ward Details</h4>
                                            <hr></hr>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Ward">Ward</label>
                                                    <select class="select2" id="Ward" asp-for="Ward" name="Ward.WardId" onchange="GetBedsByWardId()" required>
                                                        <option value="" disabled selected>Select Ward</option>
                                                        <!-- Add more options as needed -->
                                                    </select>
                                                </div>
                                                <div class="vital-group">
                                                    <label for="Bed">Bed</label>
                                                    <select class="select2" id="Bed" asp-for="Bed" name="Bed.BedId" required>
                                                        <option value="" disabled selected>Select Bed</option>
                                                        <!-- Add more options as needed -->
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <hr></hr>
                                            <h4>Contact Details</h4>
                                            <hr></hr>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <p></p>
                                                    <label>Address</label>
                                                    <div class="address-group">
                                                        <label for="Province">Province</label>
                                                        <select class="select2" id="Province" name="Province.ProvinceId" onchange="GetCitiesByProvinceId()" required>
                                                            <option value="0" disabled selected>Select Province</option>
                                                        </select>
                                                    </div>
                                                    <div class="address-group">
                                                        <label for="City">City</label>
                                                        <select class="select2" id="City" name="City.CityId" onchange="GetSuburbsByCityId()" required>
                                                            <option value="0" disabled selected>Select City</option>
                                                            <!-- Add city options here -->
                                                        </select>
                                                    </div>
                                                    <div class="address-group">
                                                        <label for="Suburb">Suburb</label>
                                                        <select class="select2" id="Suburb" name="Suburb.SuburbId" onchange="SetPostalCodeBySuburbId()" required>
                                                            <option value="" disabled selected>Select Suburb</option>
                                                            <!-- Add suburb options here -->
                                                        </select>
                                                    </div>
                                                    
                                                    <div class="address-group">
                                                        <label for="PostalCode">Postal Code</label>
                                                        <span id="txtPostalCode"></span>
                                                        @* <input type="text" value="" name="txtPostalCode" id="txtPostalCode" min="1" step="1"></input> *@
                                                        
                                                    </div><div class="address-group">
                                                        <label for="Street">Street</label>
                                                        <input type="text" value="" id="Street" name="Street" min="1" step="1"></input>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <input type="button" name="next" class="next action-button" onclick="showAllergyConditions()" value="Next Step" />
                                    </div>
                                </fieldset>
                                <fieldset id="f-2" style="display:none">
                                    <div class="form-card">
                                        <h2 class="fs-title">Allergies and Conditions</h2>
                                        <div class="form-group">
                                            <hr></hr>
                                            <h4>Allergies</h4>
                                            <hr></hr>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Allergies">Select Allergy</label>
                                                    <select class="select2" id="Allergies" name="Allergies.ActiveingredientID">
                                                        <option value="" disabled selected>Select Allergy</option>
                                                        <!-- Add more options as needed -->
                                                    </select>
                                                    <input type="hidden" id="HiddenAllergiesInput" name="AllergiesJson"></input>
                                                </div>
                                            </div>
                                            <br></br>
                                            <button type="button" onclick="addAllergy()">Add Allergy</button>
                                            <br></br>
                                            <div class="list-view-box" id="AllergyList"></div>
                                        </div>
                                        <div class="form-group">
                                            <hr></hr>
                                            <h4>Conditions</h4>
                                            <hr></hr>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Condition">Select Condition</label>
                                                    <select class="select2" id="Conditions" name="Conditions.ConditionID">
                                                        <option value="" disabled selected>Select Condition</option>
                                                        <!-- Add more options as needed -->
                                                    </select>
                                                    <input type="hidden" id="HiddenConditionsInput" name="ConditionsJson" ></input>
                                                </div>
                                            </div>
                                            <br></br>
                                            <button type="button" onclick="addCondition()">Add Condition</button>
                                            <br></br>
                                            <div class="list-view-box" id="ConditionList"></div>
                                        </div>
                                        <input type="button" name="previous" class="previous action-button-previous" onclick="showContactDetails()" value="Previous" />
                                        <input type="button" name="next" class="next action-button" onclick="showMedications()" value="Next Step" />
                                    </div>
                                </fieldset>
                                <fieldset id="f-3" style="display:none">
                                    <div class="form-card">
                                        <h2 class="fs-title">Current Medications</h2>
                                        <div class="form-group">
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Medication">Current Medication</label>
                                                    <select class="select2" id="Medication" name="Medications.MedicationID">
                                                        <option value="" disabled selected>Select Medication</option>
                                                        <!-- Add more options as needed -->
                                                    </select>
                                                    <input type="hidden" id="HiddenMedicationInput" name="MedicationJson"></input>
                                                </div>

                                            </div>
                                            <br></br>
                                            <button type="button" onclick="addMedication()">Add Medication</button>
                                            <br></br>
                                            <div class="list-view-box" id="MedicationList"></div>
                                        </div>
                                        <input type="button" name="previous" class="previous action-button-previous" onclick="showAllergyConditions()" value="Previous" />
                                        <input type="button" name="next" class="next action-button" onclick="showVitals()" value="Next Step" />
                                    </div>
                                </fieldset>
                                <fieldset id="f-4" style="display:none">
                                    <div class="form-card">
                                        <h2 class="fs-title">Vitals</h2>
                                        <div class="form-group">
                                            <hr></hr>
                                            
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Height">Height (cm)</label>
                                                    <input type="number" name="Height" min="100" max="250" required>
                                                </div>
                                                <div class="vital-group">
                                                    <label for="Weight">Weight (kg)</label>
                                                    <input type="number" name="Weight" min="20" max="250" required>

                                                    <input type="time" name="time" id="time" value="" hidden>
                                                </div>
                                            </div>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="SystolicBP">Systolic BP (mmHg)</label>
                                                    <input type="number" name="Vitals.SystolicBloodPressure" min="60" max="230" required>
                                                </div>
                                                <div class="vital-group">
                                                    <label for="DiastolicBP">Diastolic BP (mmHg)</label>
                                                    <input type="number" name="Vitals.DiastolicBloodPressure" min="40" max="120" required>
                                                </div>
                                            </div>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Pulse">Pulse (bpm)</label>
                                                    <input type="number" name="Vitals.HeartRate" min="40" max="170" required>
                                                </div>
                                                <div class="vital-group">
                                                    <label for="BloodOxygen">Blood Oxygen (%)</label>
                                                    <input type="number" name="Vitals.BloodOxygen" min="94" max="105" step="0.1" required>
                                                </div>
                                            </div>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="Respiration">Respiration Rate (Breaths/min)</label>
                                                    <input type="number" name="Vitals.Respiration" min="8" max="30" required">
                                                </div>
                                                <div class="vital-group">
                                                    <label for="BGL">Blood Glucose Level (mg/dL)</label>
                                                    <input type="number" name="Vitals.BloodGlucoseLevel" min="50" max="220" required>
                                                </div>
                                            </div>
                                            <div class="row-two-columns">
                                                
                                                <div class="vital-group">
                                                    <label for="Temperature">Temperature (°C)</label>
                                                    <input type="number" name="Vitals.Temperature" min="33.0" max="38.0" step="0.1" required>
                                                </div>
                                            </div>
                                            <div class="row-two-columns">
                                                <div class="vital-group">
                                                    <label for="BMI">BMI</label>
                                                    <input type="number" name="Vitals.BMI" value="" disabled>
                                                    <input type="time" name="Time" id="Time" value="" hidden>
                                                </div>
                                            </div>
                                        </div>
                                        <input type="button" name="previous" class="previous action-button-previous" onclick="showMedications()" value="Previous" />
                                        @* <a asp-controller="Nurse" asp-action="AdmittedPatients</a> *@
                                            <button name="submit" class="next action-button" type="submit">Submit</button>
                                            @* <button type="button" name="submit" class="next action-button" onclick="submitForm()">Submit</button> *@
                                        
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const heightInput = document.querySelector('input[name="Height"]');
        const weightInput = document.querySelector('input[name="Weight"]');
        const bmiInput = document.querySelector('input[name="Vitals.BMI"]');

        function calculateBMI() {
            const height = parseFloat(heightInput.value) / 100; // Convert cm to m
            const weight = parseFloat(weightInput.value);

            // Check for valid inputs
            if (isNaN(height) || isNaN(weight) || height <= 0 || weight <= 0) {
                bmiInput.value = ''; // Reset if invalid
                return;
            }

            // Calculate BMI
            const bmi = (weight / (height * height)).toFixed(2);
            bmiInput.value = bmi;
        }

        heightInput.addEventListener('input', calculateBMI);
        weightInput.addEventListener('input', calculateBMI);
        function submitForm() {
            // Assuming you have fields with IDs that match your model's properties
            document.querySelector('input[name="PatientID"]').value = document.getElementById('PatientID').value;
            document.querySelector('input[name="BookingID"]').value = document.getElementById('BookingID').value;
            document.querySelector('input[name="WardID"]').value = document.getElementById('Ward').value;
            document.querySelector('input[name="PatientVitalsID"]').value = document.getElementById('PatientVitalsID').value;
            document.querySelector('input[name="Date"]').value = document.getElementById('Date').value;
            document.querySelector('input[name="ProvinceID"]').value = document.getElementById('Province').value;
            document.querySelector('input[name="CityID"]').value = document.getElementById('City').value;
            document.querySelector('input[name="SuburbID"]').value = document.getElementById('Suburb').value;
            document.querySelector('input[name="StreetName"]').value = document.getElementById('Street').value;
        }
            // JavaScript functions to handle form navigation
        function showContactDetails() {
            $('#f-1').show('slow', 'swing');
            $('#f-2, #f-3, #f-4').hide('slow', 'swing');
            setActiveTab('Contact Details');
        }
        function showAllergyConditions() {
            $('#f-2').show('slow', 'swing');
            $('#f-1, #f-3, #f-4').hide('slow', 'swing');
            setActiveTab('Allergies and Conditions');
        }
        function showMedications() {
            $('#f-3').show('slow', 'swing');
            $('#f-1, #f-2, #f-4').hide('slow', 'swing');
            setActiveTab('Current Medications');
        }
        function showVitals() {
            $('#f-4').show('slow', 'swing');
            $('#f-1, #f-2, #f-3').hide('slow', 'swing');
            setActiveTab('Vitals');
        }
        function setActiveTab(tabName) {
            $('ul#progressbar input').removeClass('active-tab');
            $('ul#progressbar input[name="' + tabName + '"]').addClass('active-tab');
        }
        $(document).ready(function () {
            showContactDetails(); // Initialize to show the first step

            // Initialize Select2
            $('.select2').select2({
                placeholder: 'Select an option',
                allowClear: true
            });
            // Sort options in ascending order
            sortSelectOptions('#WardSelect');
            sortSelectOptions('#AllergySelect');
            sortSelectOptions('#ConditionSelect');
            sortSelectOptions('#Province');
            sortSelectOptions('#CIty');
    
            sortSelectOptions('#Suburb');
            sortSelectOptions('#PostalCode');
            sortSelectOptions('#Bed');
            sortSelectOptions('#MedicationSelect');
        });
        function sortSelectOptions(selector) {
            const selectElement = $(selector);
            const options = selectElement.find('option').toArray();
            options.sort((a, b) => {
                const textA = $(a).text().trim().toUpperCase();
                const textB = $(b).text().trim().toUpperCase();
                return textA.localeCompare(textB);
            });

            // Remove all existing options
            selectElement.empty();

            // Append the sorted options
            selectElement.append(options);

            // Restore the placeholder option
            selectElement.prepend('<option value="" disabled selected>Select an option</option>');
        }
        // JavaScript functions to handle dynamic list addition
        let allergyArray = [];

        function addAllergy() {
            const allergySelect = document.getElementById('Allergies');
            const allergy = allergySelect.options[allergySelect.selectedIndex].text;

            allergyArray.push(allergy);

            const allergyList = document.getElementById('AllergyList');
            const p = document.createElement('p');
            p.innerHTML = `<span>${allergy}</span><button type="button" onclick="removeAllergyItem(this)">Remove</button>`;
            allergyList.appendChild(p);

            document.getElementById('HiddenAllergiesInput').value = JSON.stringify(allergyArray);
        }
        function removeAllergyItem(button) {

            const allergyText = button.previousSibling.textContent;
            const index = allergyArray.indexOf(allergyText);
            if (index > -1) {
                allergyArray.splice(index, 1)
            }

            const p = button.parentElement;
            p.remove();

            document.getElementById('HiddenAllergiesInput').value = JSON.stringify(allergyArray);

        }

        let conditionsArray = [];
        
        function addCondition() {
            
            const conditionSelect = document.getElementById('Conditions');
            const condition = conditionSelect.options[conditionSelect.selectedIndex].text;

            conditionsArray.push(condition);

            const conditionList = document.getElementById('ConditionList');
            const p = document.createElement('p');
            p.innerHTML = `<span>${condition}</span><button type="button" onclick="removeConditionItem(this)">Remove</button>`;
            conditionList.appendChild(p);

            document.getElementById('HiddenConditionsInput').value = JSON.stringify(conditionsArray);
        }
        function removeConditionItem(button) {

            const conditionText = button.previousSibling.textContent;
            const index = conditionsArray.indexOf(conditionText);
            if (index > -1) {
                conditionsArray.splice(index,1)
            }

            const p = button.parentElement;
            p.remove();

            document.getElementById('HiddenConditionsInput').value = JSON.stringify(conditionsArray);

        }
        let medicationArray = [];
        function addMedication() {

            const medicationSelect = document.getElementById('Medication');
            const medication = medicationSelect.options[medicationSelect.selectedIndex].text;

            medicationArray.push(medication);

            const medicationList = document.getElementById('MedicationList');
            const p = document.createElement('p');
            p.innerHTML = `<span>${medication}</span><button type="button" onclick="removeMedicationItem(this)">Remove</button>`;
            medicationList.appendChild(p);

            document.getElementById('HiddenMedicationInput').value = JSON.stringify(medicationArray);
        }
        function removeMedicationItem(button) {

            const medicationText = button.previousSibling.textContent;
            const index = medicationArray.indexOf(medicationText);
            if (index > -1) {
                medicationArray.splice(index, 1)
            }

            const p = button.parentElement;
            p.remove();

            document.getElementById('HiddenMedicationInput').value = JSON.stringify(medicationArray);

        }

        // function removeItem(button) {
        //     const p = button.parentElement;
        //     p.remove();
        // }
    </script>
</body>
</html>
